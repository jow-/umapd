#!/bin/sh /etc/rc.common

START=61

USE_PROCD=1
NAME=umap-agent
PROG=/usr/sbin/umapd

network_reload=0

start_service() {
	local interfaces=$(uci -q get umapd.@agent[0].interface)
	local verbosity=$(uci -q get umapd.@agent[0].verbosity)
	local bridges=$(uci -q get umapd.@agent[0].bridge)
	local radios=$(uci -q get umapd.@agent[0].radio)
	local devices bridgedevs

	. /lib/functions/network.sh

	[ -n "$interfaces" -o -n "$bridges" ] || interfaces=lan

	for interface in $interfaces; do
		local device
		network_get_device device "$interface" || network_get_physdev device "$interface"
		[ -n "$device" ] && devices="${devices:+$devices }$device"
	done

	for bridge in $bridges; do
		bridgedevs="${bridgedevs:+$bridgedevs }$bridge"
	done

	[ -n "$devices" -o -n "$bridgedevs" ] || {
		echo "Unable to determine devices to operate on" >&2
		exit 1
	}

	[ -n "$radios" ] || {
		echo "Unable to determine radios to manage" >&2
		exit 1
	}

	procd_open_instance agent

	procd_set_param respawn 30 3 0
	procd_set_param stderr 1
	procd_set_param stdout 1

	procd_set_param command "$PROG"

	v=0
	while [ $v -lt ${verbosity:-0} ]; do
		procd_append_param command -v
		v=$((v + 1))
	done

	for ifname in $devices; do
		procd_append_param command --interface "$ifname"
	done

	for bridgedev in $bridgedevs; do
		procd_append_param command --bridge "$bridgedev"
	done

	for radio in $radios; do
		procd_append_param command --radio "$radio"
	done

	if [ -f /etc/umap-wireless-status.json ]; then
		procd_open_data
		json_add_object wifi-iface
		eval "json_init() { :; }; $(jshn -R /etc/umap-wireless-status.json)"
		json_close_object
		procd_close_data

		network_reload=1
	fi

	procd_close_instance
}

service_started() {
	[ $network_reload = 0 ] || ubus call network reload
}

service_triggers() {
	procd_add_reload_trigger network
	procd_add_raw_trigger "interface.*" 1000 /etc/init.d/umap-agent reload
}
